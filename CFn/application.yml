AWSTemplateFormatVersion: 2010-09-09
Resources:
  # ------------------------------------------------------------#
  #  TargetGroup
  # ------------------------------------------------------------#
  LaravelTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      VpcId: !ImportValue LaravelVPC
      Name: LaravelTargetGroup
      Protocol: HTTP
      Port: 80
      HealthCheckProtocol: HTTP
      HealthCheckPath: "/"
      HealthCheckPort: "traffic-port"
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      HealthCheckTimeoutSeconds: 5
      HealthCheckIntervalSeconds: 10
      Matcher:
        HttpCode: 200
      Tags:
        - Key: Name
          Value: LaravelTargetGroup
      TargetGroupAttributes:
        - Key: "deregistration_delay.timeout_seconds"
          Value: 300
        - Key: "stickiness.enabled"
          Value: false
        - Key: "stickiness.type"
          Value: lb_cookie
        - Key: "stickiness.lb_cookie.duration_seconds"
          Value: 86400
      Targets:
        - Id: !Ref LaravelWeb1
          Port: 80
        - Id: !Ref LaravelWeb2
          Port: 80
  # ------------------------------------------------------------#
  #  Internet ALB
  # ------------------------------------------------------------#
  LaravelALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: LaravelALB
      Tags:
        - Key: Name
          Value: LaravelALB
      Scheme: "internet-facing"
      LoadBalancerAttributes:
        - Key: "deletion_protection.enabled"
          Value: false
        - Key: "idle_timeout.timeout_seconds"
          Value: 60
      SecurityGroups:
        - !ImportValue Laravel-ALB-SG
      Subnets:
        - !ImportValue LaravelWeb1Subnet
        - !ImportValue LaravelWeb2Subnet
  ALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref LaravelTargetGroup
          Type: forward
      LoadBalancerArn: !Ref LaravelALB
      Port: 80
      Protocol: HTTP
  # ------------------------------------------------------------#
  #  EC2
  # ------------------------------------------------------------#
  LaravelWeb1:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: MyKeypair
      ImageId: ami-0218d08a1f9dac831
      InstanceType: t2.micro
      Monitoring: false
      SecurityGroupIds:
        - !ImportValue Laravel-Web-SG
      SubnetId: !ImportValue LaravelWeb1Subnet
      Tags:
        - Key: Name
          Value: LaravelWeb1
  LaravelWeb2:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: MyKeypair
      ImageId: ami-0218d08a1f9dac831
      InstanceType: t2.micro
      Monitoring: false
      SecurityGroupIds:
        - !ImportValue Laravel-Web-SG
      SubnetId: !ImportValue LaravelWeb2Subnet
      Tags:
        - Key: Name
          Value: LaravelWeb2
  # ------------------------------------------------------------#
  #  ElasticIP
  # ------------------------------------------------------------#
  LaravelWeb1EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  LaravelWeb1EIPAssociate:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt LaravelWeb1EIP.AllocationId
      InstanceId: !Ref LaravelWeb1
  LaravelWeb2EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  LaravelWeb2EIPAssociate:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt LaravelWeb2EIP.AllocationId
      InstanceId: !Ref LaravelWeb2
  # ------------------------------------------------------------#
  #  RDS
  # ------------------------------------------------------------#
  LaravelRDS:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: LaravelRDS
      Engine: mysql
      EngineVersion: 5.7
      DBInstanceClass: db.t2.micro
      StorageType: gp2
      AllocatedStorage: 10
      MasterUsername: !Sub ${!DB_USERNAME}
      DBName: !Sub ${!DB_DATABASE}
      MasterUserPassword: !Sub ${!DB_PASSWORD}
      VPCSecurityGroups:
        - !ImportValue Laravel-RDS-SG
      DBSubnetGroupName: !Ref LaravelRDSSubnetGroup
      MultiAZ: false
      AvailabilityZone: !Sub ${AWS::Region}a
      Tags:
        - Key: Name
          Value: LaravelRDS
  LaravelRDSSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: LaravelRDSSubnetGroup
      SubnetIds:
        - !ImportValue LaravelRDS1Subnet
        - !ImportValue LaravelRDS2Subnet
      Tags:
        - Key: Name
          Value: LaravelRDSSubnetGroup
